# This references a standard debian container from the
# Docker Hub https://registry.hub.docker.com/_/debian/
# Read more about containers on our dev center
# https://devcenter.wercker.com/overview-and-core-concepts/containers/
box: nginx:alpine
# You can also use services such as databases. Read more on our dev center:
# https://devcenter.wercker.com/administration/services/
# services:
    # - postgres
    # https://devcenter.wercker.com/administration/services/examples/postgresql/

    # - mongo
    # https://devcenter.wercker.com/administration/services/examples/mongodb/

# This is the build pipeline. Pipelines are the core of wercker
# Read more about pipelines on our dev center
# https://devcenter.wercker.com/development/pipelines/
build:
    # Steps make up the actions in your pipeline
    # Read more about steps on our dev center:
    # https://devcenter.wercker.com/development/steps/
  steps:
    - script:
        name: echo
        code: |
          echo "hello world!"
          
docker-push:
  box:
    id: nginx:alpine
  steps:
    #- script:
    #    name: copy binaries to /opt/app
    #    code: |
    #      mkdir -p /opt
    #      cp ${WERCKER_ROOT}/source /opt/source

    # Pushing to a quay.io repository
    # For other docker repository refer to this doc: http://devcenter.wercker.com/docs/containers/pushing-containers
    - internal/docker-build:
        dockerfile: Dockerfile
        image-name: sample-image
    - internal/docker-push:
        username: $CONTAINER_REGISTRY_USERNAME
        password: $API_USER_TOKEN
        repository: $REPO_NAME/$APP_NAME
        registry: $PRIVATE_REGISTRY_PATH
        tag: ${WERCKER_GIT_BRANCH}-${WERCKER_GIT_COMMIT},latest
        entrypoint: /opt/source
        port: 80/tcp     


deploy:

  box:
    id: debian

  steps:

    - script:
        name: debug
        code: |
          echo $WERCKER_OUTPUT_DIR
          ls -l $WERCKER_OUTPUT_DIR
          echo $WERCKER_ROOT
          ls -l $WERCKER_ROOT
    - bash-template:
        cwd: $WERCKER_ROOT/kubernetes/deployment

    - script:
        name: Remove template files
        cwd: $WERCKER_ROOT/kubernetes/deployment
        code: |
          rm *.template.yaml
    - script:
        name: debug
        cwd: $WERCKER_ROOT/kubernetes/deployment
        code: |
          ls -l
    - script:
        name: echo tags
        code: |
          cat $WERCKER_ROOT/kubernetes/deployment/deployment.yaml
          echo "Docker image and tag:"
          echo "${WERCKER_GIT_BRANCH}-${WERCKER_GIT_COMMIT}"
          
    - kubectl:
        server: $KUBE_ENDPOINT
        token: $KUBE_USER_TOKEN
        cwd: $WERCKER_ROOT/kubernetes/deployment
        insecure-skip-tls-verify: true
        command: apply -f .
